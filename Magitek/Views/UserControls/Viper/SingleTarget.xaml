<UserControl x:Class="Magitek.Views.UserControls.Viper.SingleTarget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Magitek.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:Magitek.Enumerations"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             d:DesignHeight="450"
             d:DesignWidth="500"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:BaseSettings.Instance}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Magitek;component/Styles/Magitek.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="InterruptStrategy" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:InterruptStrategy" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Margin="10">

        <controls:SettingsBlock Margin="0,2" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5" Orientation="Horizontal">
                <CheckBox Content="Use Interrupt and Stun. If activated, use strategy: " IsChecked="{Binding ViperSettings.UseStunOrInterrupt, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                <ComboBox Width="170" ItemsSource="{Binding Source={StaticResource InterruptStrategy}}" SelectedValue="{Binding ViperSettings.Strategy, Mode=TwoWay}" Style="{DynamicResource ComboBox}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,2" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Margin="0,3" Content=" Hide Positional Message " IsChecked="{Binding ViperSettings.HidePositionalMessage, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,2" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <StackPanel Orientation="Horizontal">
                    <CheckBox Margin="5" Content=" Enable Dreadwinder                 " IsChecked="{Binding ViperSettings.UseVicewinder, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <CheckBox Margin="5" Content=" Enable Death Rattle" IsChecked="{Binding ViperSettings.UseDeathRattle, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <CheckBox Margin="5" Content=" Enable UncoiledFury " IsChecked="{Binding ViperSettings.UseUncoiledFury, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="and save at least " />
                    <controls:Numeric MaxValue="2" MinValue="0"
                  Value="{Binding ViperSettings.UncoiledFurySaveChrages, Mode=TwoWay}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" charges when out of range " />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <CheckBox Margin="5" Content=" Enable Reawaken" IsChecked="{Binding ViperSettings.UseReawaken, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" but do Not Use If Enemy Is Dying Within  " />
                    <controls:Numeric  MaxValue="100" MinValue="1" Value="{Binding ViperSettings.DontReawakenIfEnemyDyingWithinSeconds, Mode=TwoWay}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text=" Seconds" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                   
                    <CheckBox Margin="5" Content=" Enable Last Lash " IsChecked="{Binding ViperSettings.UseLastLash, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,2" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <TextBlock Margin="0,0,0,5" Style="{DynamicResource TextBlockSection}" Text="Advance Burst Window Settings" />
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox Content="Hold Burst              " IsChecked="{Binding ViperSettings.BurstLogicHoldBurst, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

    </StackPanel>
</UserControl>

