<UserControl x:Class="Magitek.Views.UserControls.MainSettingsOverlay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             xmlns:enumerations="clr-namespace:Magitek.Enumerations"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Width="{Binding GeneralSettings.GeneralSettings.OverlayWidth, Mode=TwoWay}">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:MainOverlayViewModel.Instance}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary Source="/Magitek;component/Styles/Magitek.xaml" />
    </UserControl.Resources>

    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <ObjectDataProvider x:Key="SummonerPets" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enumerations:SummonerPets" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid  Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Center">
            <Border VerticalAlignment="Top" CornerRadius="5" Padding="5">
                <Border.Background>
                    <SolidColorBrush Color="#FF101011" Opacity="0.5" />
                </Border.Background>
                <WrapPanel VerticalAlignment="Center">
                    <Button Name="BtnOpenSettings" Command="{Binding OpenMainSettingsForm}" Style="{DynamicResource OverlaySettingsButton}" Width="18" />
                    <CheckBox HorizontalAlignment="Center" Name="ChkDisplayToggles" Width="18" IsChecked="True" Style="{DynamicResource OverlayHideTogglesCheckbox}" Margin="0,5,0,0" />
                </WrapPanel>
            </Border>
        </Grid>

        <Border Margin="0" Padding="1" Visibility="{Binding Path=IsChecked, ElementName=ChkDisplayToggles, Converter={StaticResource BoolToVis}}" Grid.Column="1" CornerRadius="5">
            <Border.Background>
                <SolidColorBrush Color="#FF101011" Opacity="0.75" />
            </Border.Background>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <WrapPanel>
                    <WrapPanel Orientation="Horizontal">
                        <CheckBox Content="Active CR" IsChecked="{Binding GeneralSettings.GeneralSettings.ActiveCombatRoutine, Mode=TwoWay}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                        <CheckBox Content="PVP Mode" IsChecked="{Binding GeneralSettings.GeneralSettings.ActivePvpCombatRoutine, Mode=TwoWay}" Command="{Binding EnablePvpOverlay}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                        <CheckBox Content="Use Custom Opener" IsChecked="{Binding GeneralSettings.GeneralSettings.UseOpeners, Mode=TwoWay}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                        <CheckBox Content="Reset Custom Opener" IsChecked="{Binding GeneralSettings.GeneralSettings.ResetOpeners, Mode=TwoWay}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                        <CheckBox Content="Use Chocobo" IsChecked="{Binding GeneralSettings.GeneralSettings.SummonChocobo, Mode=TwoWay}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                        <CheckBox Content="Execute LimitBreak" IsChecked="{Binding GeneralSettings.GeneralSettings.ForceLimitBreak}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                    </WrapPanel>
                </WrapPanel>
                <ItemsControl Grid.Row="1" ItemsSource="{Binding SettingsToggles, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                   </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding ToggleText}" Command="{Binding ExecuteToggleCommand}" IsChecked="{Binding ToggleChecked, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource CheckBoxOverlayCustomToggle}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>
            </Grid>
        </Border>
    </Grid>

</UserControl>
