<UserControl x:Class="Magitek.Views.UserControls.Bard.Cooldowns"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:properties="clr-namespace:Magitek.Properties"
             xmlns:controls="clr-namespace:Magitek.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:Magitek.Enumerations"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             d:DesignHeight="400"
             d:DesignWidth="500"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:BaseSettings.Instance}" />
    </UserControl.DataContext>
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Magitek;component/Styles/Magitek.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="BuffStrategy" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:BuffStrategy" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="PotionEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:PotionEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel Margin="10">

        <controls:SettingsBlock Margin="0,5,0,0" Background="{DynamicResource ClassSelectorBackground}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Row="0" Grid.Column="0" Content="{x:Static properties:Resources.Generic_Use_Potion}" IsChecked="{Binding BardSettings.UsePotion, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                <ComboBox Grid.Row="0" Grid.Column="1" Width="120" ItemsSource="{Binding Source={StaticResource PotionEnum}}" SelectedValue="{Binding BardSettings.PotionTypeAndGradeLevel, Mode=TwoWay}" Style="{DynamicResource ComboBox}" />
                <TextBlock Grid.Row="0" Grid.Column="2" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Generic_Item_Potion_Selected_Should_Be_In_You}" />
            </Grid>
        </controls:SettingsBlock>
        
        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,10,0" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text_Selected_Buffing_Strategy}" />
                    <ComboBox Width="170" ItemsSource="{Binding Source={StaticResource BuffStrategy}}" SelectedValue="{Binding BardSettings.UseCoolDowns, Mode=TwoWay}" Style="{DynamicResource ComboBox}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox  Content="{x:Static properties:Resources.Bard_Content_Raging_Strikes}" IsChecked="{Binding BardSettings.UseRageingStrikes, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox Content="{x:Static properties:Resources.Bard_Content_Only_During_Wanderers_Minuet}" IsChecked="{Binding BardSettings.UseRageingStrikesOnlyDuringWanderersMinuet, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox Content="{x:Static properties:Resources.Bard_Content_Delay_RS_Until_Barrage_Is_Off_Cooldown}" IsChecked="{Binding BardSettings.DelayRageingStrikesUntilBarrageIsReady, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox Content="{x:Static properties:Resources.Bard_Content_Delay_RS_Until}" IsChecked="{Binding BardSettings.DelayRageingStrikesDuringWanderersMinuet, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <controls:Numeric MaxValue="45" MinValue="1" Value="{Binding BardSettings.DelayRageingStrikesDuringWanderersMinuetUntilXSecondsInWM, Mode=TwoWay}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text_Seconds_In_Wanderers_Minuet}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox Content="{x:Static properties:Resources.Bard_Content_Barrage}" IsChecked="{Binding BardSettings.UseBarrage, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <CheckBox Content="{x:Static properties:Resources.Bard_Content_Only_With_Buff_RSRFBV}" IsChecked="{Binding BardSettings.UseBarrageOnlyWithBuff, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <StackPanel Margin="5" Orientation="Horizontal">
                    <CheckBox Content="{x:Static properties:Resources.Bard_Content_Battle_Voice}" IsChecked="{Binding BardSettings.Instance.UseBattleVoice, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                </StackPanel>
            </StackPanel>
        </controls:SettingsBlock>

    </StackPanel>
</UserControl>

