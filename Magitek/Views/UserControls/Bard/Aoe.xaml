<UserControl x:Class="Magitek.Views.UserControls.Bard.Aoe"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:properties="clr-namespace:Magitek.Properties"
             xmlns:controls="clr-namespace:Magitek.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Magitek.ViewModels"
             d:DesignHeight="400"
             d:DesignWidth="500"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <Binding Source="{x:Static viewModels:BaseSettings.Instance}" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary Source="/Magitek;component/Styles/Magitek.xaml" />
    </UserControl.Resources>

    <StackPanel Margin="10">

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5">
                <CheckBox Content="{x:Static properties:Resources.Generic_Use_Area_Of_Effect_Abilities}" IsChecked="{Binding BardSettings.UseAoe, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Row="1" Grid.Column="0" Content="{x:Static properties:Resources.Bard_Content_Quick_Nock}" IsChecked="{Binding BardSettings.UseQuickNock, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                <TextBlock Grid.Row="1" Grid.Column="1" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Generic_When_There_Are}" />
                <controls:Numeric Grid.Row="1"
                                  Grid.Column="2"
                                  Margin="0,3,0,0"
                                  MaxValue="100"
                                  MinValue="1"
                                  Value="{Binding BardSettings.QuickNockEnemiesInCone, Mode=TwoWay}" />
                <TextBlock Grid.Row="1" Grid.Column="3" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text_Enemies_In_A_Cone}" />
        
                <CheckBox Grid.Row="2" Grid.Column="0" Content="{x:Static properties:Resources.Bard_Content_Rain_Of_Death}" IsChecked="{Binding BardSettings.UseRainOfDeath, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                <TextBlock Grid.Row="2" Grid.Column="1" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Generic_When_There_Are}" />
                <controls:Numeric Grid.Row="2"
                                  Grid.Column="2"
                                  Margin="0,3,0,0"
                                  MaxValue="100"
                                  MinValue="1"
                                  Value="{Binding BardSettings.RainOfDeathEnemies, Mode=TwoWay}" />
                <TextBlock Grid.Row="2" Grid.Column="3" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Generic_Enemies}" />

            </Grid>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel Margin="5" Orientation="Horizontal">
                <CheckBox Content="{x:Static properties:Resources.Bard_Content_Use_Shadowbite}" IsChecked="{Binding BardSettings.UseShadowBite, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
            </StackPanel>
        </controls:SettingsBlock>

        <controls:SettingsBlock Margin="0,5" Background="{DynamicResource ClassSelectorBackground}">
            <StackPanel>
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Row="0" Grid.Column="0" Content="{x:Static properties:Resources.Bard_Content_Use_Apex_Arrow_with_Soul_Voice_}" IsChecked="{Binding BardSettings.UseApexArrow, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <controls:Numeric Grid.Row="0" Grid.Column="1" Margin="0,3,0,0" MaxValue="100" MinValue="20" Value="{Binding BardSettings.UseApexArrowWithAtLeastXSoulVoice, Mode=TwoWay}" />

                    <CheckBox Grid.Row="1" Grid.Column="0" Content="{x:Static properties:Resources.Bard_Content_Use_Buffed_Apex_Arrow_with_Soul_Voice}" IsChecked="{Binding BardSettings.UseBuffedApexArrow, Mode=TwoWay}" Style="{DynamicResource CheckBoxFlat}" />
                    <controls:Numeric Grid.Row="1" Grid.Column="1" Margin="0,3,0,0" MaxValue="100" MinValue="20" Value="{Binding BardSettings.UseBuffedApexArrowWithAtLeastXSoulVoice, Mode=TwoWay}" />
                    <TextBlock Grid.Row="1" Grid.Column="2" Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text_at_Damage_Buff_}" />
                    <controls:Numeric Grid.Row="1" Grid.Column="3" Margin="0,3,0,0" MaxValue="100" MinValue="1" Value="{Binding BardSettings.UseBuffedApexArrowWithAtLeastXBonusDamage, Mode=TwoWay}" />
                </Grid>
                <StackPanel>
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text_Info_on_Buffed_Apex_Experimental}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text___24_will_match_RSBVRFWM_EndWalker_Patch}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text___This_will_force_to_keep_Apex_for_Buff_}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text___This_will_force_to_execute_Apex_in_MB_}" />
                    <TextBlock Style="{DynamicResource TextBlockDefault}" Text="{x:Static properties:Resources.Bard_Text___You_need_to_check_Use_Apex_Arrow_check}" />
                </StackPanel>
            </StackPanel>
            
        </controls:SettingsBlock>

    </StackPanel>
</UserControl>

