# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: pre-release

on:
  push:
    branches: [ "master" ]

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    - name: Restore NuGet packages
      run: |
        cd Magitek
        nuget restore Magitek.sln
    - name: Build solution
      run: |
        cd Magitek
        msbuild Magitek.sln /p:Configuration=Release
    - name: Generate Version.txt
      run: echo "pre-${{ github.run_number }}" > ./Magitek/bin/release/Version.txt

    - name: Create Magitek.zip
      run: |
        powershell Compress-Archive -Path ./Magitek/bin/release/Magitek.dll, ./Magitek/bin/release/Version.txt, ./MagitekLoader/MagitekLoader.cs -DestinationPath ./Magitek/bin/release/Magitek.zip

    - name: Upload Artifacts for Release
      uses: actions/upload-artifact@v2
      with:
        name: Magitek.zip
        path: ./Magitek/bin/release/Magitek.zip

    - name: Upload Version.txt for Release
      uses: actions/upload-artifact@v2
      with:
        name: Version.txt
        path: ./Magitek/bin/release/Version.txt

    - name: Delete all pre-releases
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Fetching releases..."
        $releases = Invoke-RestMethod -Headers @{Authorization = "token $env:GITHUB_TOKEN"} -Uri "https://api.github.com/repos/${{ github.repository }}/releases"
        $prereleases = $releases | Where-Object { $_.prerelease -eq $true }

        foreach ($release in $prereleases) {
          $release_id = $release.id
          $tag_name = $release.tag_name
          echo "Deleting pre-release with ID: $release_id and tag: $tag_name"
          Invoke-RestMethod -Method Delete -Headers @{Authorization = "token $env:GITHUB_TOKEN"} -Uri "https://api.github.com/repos/${{ github.repository }}/releases/$release_id"
          Invoke-RestMethod -Method Delete -Headers @{Authorization = "token $env:GITHUB_TOKEN"} -Uri "https://api.github.com/repos/${{ github.repository }}/git/refs/tags/$tag_name"
        }

        echo "All pre-releases and associated tags deleted."
      shell: pwsh

    - name: Create GitHub Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: "pre-${{ github.run_number }}"
        files: |
          ./Magitek/bin/release/Magitek.zip
          ./Magitek/bin/release/Version.txt
