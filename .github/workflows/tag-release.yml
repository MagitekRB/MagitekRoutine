name: tag-release

on:
  push:
    tags:
     - "v*"

jobs:
  release:
    name: "Release"
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install zipfile36

    - name: Extract version from tag
      id: extract_version
      run: |
        $version = "${{ github.ref_name }}.0"
        $version = $version.Substring(1)
        echo "VERSION=$version" >> $env:GITHUB_ENV

    - name: Verify version string
      run: echo "Version is $env:VERSION"

    - name: Restore NuGet packages
      run: |
        cd Magitek
        nuget restore Magitek.sln

    - name: Update AssemblyInfo
      run: |
        $version = $env:VERSION
        Write-Host "Updating AssemblyInfo.cs with version $version"
        $assemblyInfoPath = "Magitek/Properties/AssemblyInfo.cs"
        (Get-Content $assemblyInfoPath) -replace '(\[assembly: AssemblyVersion\(")[^"]*("\)\])', "[assembly: AssemblyVersion(`"$version`")]" | Set-Content $assemblyInfoPath
        (Get-Content $assemblyInfoPath) -replace '(\[assembly: AssemblyFileVersion\(")[^"]*("\)\])', "[assembly: AssemblyFileVersion(`"$version`")]" | Set-Content $assemblyInfoPath

    - name: Verify AssemblyInfo
      run: |
        Write-Host "Contents of AssemblyInfo.cs after replacement:"
        Get-Content "Magitek/Properties/AssemblyInfo.cs"

    - name: Build solution
      run: |
        cd Magitek
        msbuild Magitek.sln /p:Configuration=Release

    - name: Generate Version.txt
      run: echo "${{ github.ref_name }}" > ./Magitek/bin/release/Version.txt
      
    - name: Create Magitek.zip
      run: |
        python -c "
        import os
        import zipfile

        # Define paths
        zip_path = './Magitek/bin/release/Magitek.zip'

        # Step 1: Create initial zip archive with the specified files
        with zipfile.ZipFile(zip_path, 'w') as zipf:
            zipf.write('./Magitek/bin/release/Magitek.dll', arcname='Magitek.dll')
            zipf.write('./Magitek/bin/release/Version.txt', arcname='Version.txt')
            zipf.write('./MagitekLoader/MagitekLoader.cs', arcname='MagitekLoader.cs')
            zipf.write('./Magitek/Properties/AssemblyInfo.cs', arcname='Properties/AssemblyInfo.cs')
        "

    - name: Upload Artifacts for Release
      uses: actions/upload-artifact@v4
      with:
        name: Magitek.zip
        path: ./Magitek/bin/release/Magitek.zip

    - name: Upload Version.txt for Release
      uses: actions/upload-artifact@v4
      with:
        name: Version.txt
        path: ./Magitek/bin/release/Version.txt

    - name: Create GitHub Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          ./Magitek/bin/release/Magitek.zip
          ./Magitek/bin/release/Version.txt
